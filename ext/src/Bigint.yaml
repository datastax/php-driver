---
Bigint:
  comment: A PHP representation of the CQL `bigint` datatype
  methods:
    min:
      comment: Minimum possible Bigint value
      return:
        comment: minimum value
        type: \Cassandra\Bigint
    max:
      comment: Maximum possible Bigint value
      return:
        comment: maximum value
        type: \Cassandra\Bigint
    __construct:
      comment: Creates a new 64bit integer.
      params:
        value:
          comment: integer value as a string
          type: string
    type:
      comment: The type of this bigint.
      return:
        comment: ""
        type: \Cassandra\Type
    value:
      comment: Returns the integer value.
      return:
        comment: integer value
        type: string
    __toString:
      comment: Returns string representation of the integer value.
      return:
        comment: integer value
        type: string
    add:
      comment: ""
      params:
        num:
          comment: ""
          type: \Cassandra\Numeric
      return:
        comment: ""
        type: \Cassandra\Numeric
    sub:
      comment: ""
      params:
        num:
          comment: ""
          type: \Cassandra\Numeric
      return:
        comment: ""
        type: \Cassandra\Numeric
    mul:
      comment: ""
      params:
        num:
          comment: ""
          type: \Cassandra\Numeric
      return:
        comment: ""
        type: \Cassandra\Numeric
    div:
      comment: ""
      params:
        num:
          comment: ""
          type: \Cassandra\Numeric
      return:
        comment: ""
        type: \Cassandra\Numeric
    mod:
      comment: ""
      params:
        num:
          comment: ""
          type: \Cassandra\Numeric
      return:
        comment: ""
        type: \Cassandra\Numeric
    abs:
      comment: ""
      return:
        comment: ""
        type: \Cassandra\Numeric
    neg:
      comment: ""
      return:
        comment: ""
        type: \Cassandra\Numeric
    sqrt:
      comment: ""
      return:
        comment: ""
        type: \Cassandra\Numeric
    toInt:
      comment: ""
      return:
        comment: ""
        type: int
    toDouble:
      comment: ""
      return:
        comment: ""
        type: float
...
