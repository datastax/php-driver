---
Tinyint:
  comment: A PHP representation of the CQL `tinyint` datatype.
  methods:
    min:
      comment: Minimum possible Tinyint value
      return:
        comment: minimum value
        type: \Cassandra\Tinyint
    max:
      comment: Maximum possible Tinyint value
      return:
        comment: maximum value
        type: \Cassandra\Tinyint
    __construct:
      comment: Creates a new 8-bit signed integer.
      params:
        value:
          comment: The value as an integer, double or string
          type: int|double|string
    add:
      comment: ""
      params:
        num:
          comment: ""
          type: \Cassandra\Numeric
      return:
        comment: ""
        type: \Cassandra\Numeric
    sub:
      comment: ""
      params:
        num:
          comment: ""
          type: \Cassandra\Numeric
      return:
        comment: ""
        type: \Cassandra\Numeric
    mul:
      comment: ""
      params:
        num:
          comment: ""
          type: \Cassandra\Numeric
      return:
        comment: ""
        type: \Cassandra\Numeric
    div:
      comment: ""
      params:
        num:
          comment: ""
          type: \Cassandra\Numeric
      return:
        comment: ""
        type: \Cassandra\Numeric
    mod:
      comment: ""
      params:
        num:
          comment: ""
          type: \Cassandra\Numeric
      return:
        comment: ""
        type: \Cassandra\Numeric
    abs:
      comment: ""
      return:
        comment: ""
        type: \Cassandra\Numeric
    neg:
      comment: ""
      return:
        comment: ""
        type: \Cassandra\Numeric
    sqrt:
      comment: ""
      return:
        comment: ""
        type: \Cassandra\Numeric
    toInt:
      comment: ""
      return:
        comment: ""
        type: int
    toDouble:
      comment: ""
      return:
        comment: ""
        type: float
    type:
      comment: The type of this value (tinyint).
      return:
        comment: ""
        type: \Cassandra\Type
    value:
      comment: Returns the integer value.
      return:
        comment: integer value
        type: int
    __toString:
      comment: ""
      return:
        comment: ""
        type: string
...
